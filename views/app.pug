extends layout

block content

    //-overlay
    //-.drawing-overlay
    .display-info-container.border-radius
        button.uk-button.uk-button-primary.uk-width-1-1(uk-toggle='target: #more-info')
            | More Info
        .uk-card.uk-card-body.uk-margin-small
            #place
            #location

            //-Test points
            //- #tiltLR
            //-     | nodata

            //- #tiltFB
            //-     | nodata

            //- #direction
            //-     | nodata


    #more-info(uk-modal)
        .uk-modal-dialog.uk-modal-body.border-radius
            button.uk-modal-close-deafault(type='button' uk-close)
            #moredata

    //-camera
    .video-container
        video#video(width="100%" height="100%" autoplay)

    canvas#canvas(width="800" height="480")


    script.
        var place_txt = document.getElementById('place');
        var location_txt = document.getElementById('location');
        var more_txt = document.getElementById('moredata');

        /**initialize the background size**/
        window.onload = setup();

        function Orientation() { ; }
        Orientation.alpha = 0;
        Orientation.beta = 0;
        Orientation.gamma = 0;
        

        function setup(){

            //start streaming service
            startStream();

            //get device orientation
            deviceOrient();

            setInterval(function(){
                //reset more section
                more_txt.innerHTML = "";

                //getLocation
                getDeviceLoc(function(req2){
                    var latt = req2.coords.latitude;
                    var long = req2.coords.longitude;

                    var getAlpha = Orientation.alpha;
                    console.log(getAlpha);

                    var reqURL = `https://travismadill.stdlib.com/mapsproc@dev/?lat=${latt}&lng=${long}&heading=${getAlpha}`;
                    //-document.getElementById('direction').innerHTML = `${latt}; ${long}; ${getAlpha}`;

                    console.log(reqURL)
                    //- //request data
                    requestData(reqURL);
                });
            }, 3000);
        };

        function startStream(){
            getStream ('video');
        }

        function getUserMedia(options, successCallback, failureCallback) {
            var api = navigator.getUserMedia || navigator.webkitGetUserMedia ||
                navigator.mozGetUserMedia || navigator.msGetUserMedia;
            if (api) {
                return api.bind(navigator)(options, successCallback, failureCallback);
            }
        }

        function getStream (type) {
            if (!navigator.getUserMedia && !navigator.webkitGetUserMedia &&
                !navigator.mozGetUserMedia && !navigator.msGetUserMedia) {
                return;
            }

            var constraints = {};
            constraints[type] = true;
            getUserMedia(constraints, function (stream) {
                var mediaControl = document.querySelector(type);
                
                if ('srcObject' in mediaControl) {
                mediaControl.srcObject = stream;
                mediaControl.src = (window.URL || window.webkitURL).createObjectURL(stream);
                } else if (navigator.mozGetUserMedia) {
                mediaControl.mozSrcObject = stream;
                }
            }, function (err) {
                alert('Error: ' + err);
            });
        }

        function deviceOrient(callback){
            if(window.DeviceOrientationEvent){
                window.addEventListener("deviceorientation", function(event){0
                
                    var curralpha = Math.round(event.alpha);
                    var currbeta  = Math.round(event.beta);
                    var currgamma = Math.round(event.gamma);

                    //-Test Point
                    //- document.getElementById('tiltLR').innerHTML = curralpha;
                    //- document.getElementById('tiltFB').innerHTML = currbeta;
                    //- document.getElementById('direction').value = currgamma;

                    Orientation.alpha = curralpha;
                    Orientation.beta = currbeta;
                    Orientation.gamma = currgamma;
                    handleOrientationEvent(curralpha, currbeta, currgamma);
                }, true);
            }else{
                alert('Device not support for device orientation');
            }

            var handleOrientationEvent = function(curralpha, currbeta, currgamma) {
                Orientation.alpha = curralpha;
                Orientation.beta = currbeta;
                Orientation.gamma = currgamma;
            };
        }

        

        /**Get the geolocation */
        function getCoordinates(location){
            var latt = location.coords.latitude
            var long= location.coords.longitude;

            console.log('Lat: '+latt+', Long: '+long);
            
            location = {
                long : long,
                latt : latt
            }
        }

        function getDeviceLoc(callback){
            if('geolocation' in navigator){
                navigator.geolocation.getCurrentPosition(function(location){
                    getCoordinates(location);
                    callback(location);
                })
            }else{
                alert('Geolocation not supported');
            }
        }

        function requestData(reqURL){

            /**Request the location data through stdlib API */
            var requestLocData = function(){
                this.get = function(URL, callback){
                    var request = new XMLHttpRequest();
                    request.onreadystatechange = function(){
                        if(request.readyState == 4 && request.status == 200){
                            //console.log(request.responseText);
                            callback(request.responseText);
                        }
                    }

                    request.open("GET", URL, true);
                    request.send(null);
                }
            }

            //request the data
            var locData = new requestLocData();
            locData.get(reqURL, function(res){
                var data = JSON.parse(res);

                if(data != null){
                    //-console.log(data.result)
                    //-console.log(data.result.formatted_address)
                    

                    location_txt.innerHTML = "Location: "+data.result.formatted_address;
                    place_txt.innerHTML = "<b>Name: "+data.result.name + '</b>';

                    more_txt.innerHTML += "";

                    //more information content
                    if(data.result.opening_hours != null)
                        more_txt.innerHTML += "<p>OPEN NOW: "+data.result.opening_hours.open_now+"</p>";

                    if(data.result.price_level != null)

                        switch(data.result.price_level){
                            case 0:
                                more_txt.innerHTML += "<p>PRICE LEVEL: FREE</p>";
                                break;

                            case 1:
                                more_txt.innerHTML += "<p>PRICE LEVEL: Inexpensive</p>";
                                break;

                            case 2:
                                more_txt.innerHTML += "<p>PRICE LEVEL: Moderate</p>";
                                break;
                            
                            case 3:
                                more_txt.innerHTML += "<p>PRICE LEVEL: Expensive</p>";
                                break;

                            case 4:
                                more_txt.innerHTML += "<p>PRICE LEVEL: Very Expensive</p>";
                                break;

                            default:
                                more_txt.innerHTML += "<p>PRICE LEVEL: NO DATA AVAILABLE</p><br>";
                                
                        }

                    if(data.result.rating != null){
                        more_txt.innerHTML += "<p>RATING: "+data.result.rating+"</p><br>";
                    }
                }else{
                    more_txt.innerHTML = "FAILED TO RETRIEVE LOCATION DATA";
                }
            });
        }


       