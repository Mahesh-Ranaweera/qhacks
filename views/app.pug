extends layout

block content

    //-overlay
    //-.drawing-overlay
    .display-info-container
        .uk-card.uk-card-body
            #place
            #location

            #tiltLR
                | nodata

            #tiltFB
                | nodata

            #direction
                | nodata

    //-camera
    .video-container
        video#video(width="100%" height="100%" autoplay)

    canvas#canvas(width="800" height="480")


    script.
        var place_txt = document.getElementById('place');
        var location_txt = document.getElementById('location');

        /**initialize the background size**/
        window.onload = setup();
        

        function setup(){
            var orientation = {
                alpha: 0,
                beta : 0,
                gamma: 0
            }

            //start streaming service
            startStream();

            //get device orientation
            deviceOrient(function(req1){
                console.log(req1);
            });

             //getLocation
            getDeviceLoc(function(req2){
                var latt = req2.coords.latitude;
                var long = req2.coords.longitude;

                var getGamma =  document.getElementById('direction').value;
                console.log(getGamma);

                var reqURL = `https://travismadill.stdlib.com/mapsproc@dev/?lat=${latt}&lng=${long}&heading=${getGamma}`;

                console.log(reqURL)
                //- //request data
                requestData(reqURL);
            });
        };

        function startStream(){
            getStream ('video');
        }

        function getUserMedia(options, successCallback, failureCallback) {
            var api = navigator.getUserMedia || navigator.webkitGetUserMedia ||
                navigator.mozGetUserMedia || navigator.msGetUserMedia;
            if (api) {
                return api.bind(navigator)(options, successCallback, failureCallback);
            }
        }

        function getStream (type) {
            if (!navigator.getUserMedia && !navigator.webkitGetUserMedia &&
                !navigator.mozGetUserMedia && !navigator.msGetUserMedia) {
                return;
            }

            var constraints = {};
            constraints[type] = true;
            getUserMedia(constraints, function (stream) {
                var mediaControl = document.querySelector(type);
                
                if ('srcObject' in mediaControl) {
                mediaControl.srcObject = stream;
                mediaControl.src = (window.URL || window.webkitURL).createObjectURL(stream);
                } else if (navigator.mozGetUserMedia) {
                mediaControl.mozSrcObject = stream;
                }
            }, function (err) {
                alert('Error: ' + err);
            });
        }

        function deviceOrient(callback){
            if(window.DeviceOrientationEvent){
                window.addEventListener("deviceorientation", function(event){
                
                    var curralpha = Math.round(event.alpha);
                    var currbeta  = Math.round(event.beta);
                    var currgamma = Math.round(event.gamma);

                    document.getElementById('tiltLR').innerHTML = curralpha;
                    document.getElementById('tiltFB').innerHTML = currbeta;
                    document.getElementById('direction').value = currgamma;

                    orientation = {
                        alpha: curralpha,
                        beta : currbeta,
                        gamma: currgamma
                    }

                    handleOrientationEvent(curralpha, currbeta, currgamma);
                }, true);
            }else{
                alert('Device not support for device orientation');
            }

            var handleOrientationEvent = function(curralpha, currbeta, currgamma) {
                orientation = {
                        alpha: curralpha,
                        beta : currbeta,
                        gamma: currgamma
                }
                callback(orientation);          
            };
        }

        

        /**Get the geolocation */
        function getCoordinates(location){
            var latt = location.coords.latitude
            var long= location.coords.longitude;

            console.log('Lat: '+latt+', Long: '+long);
            
            location = {
                long : long,
                latt : latt
            }
        }

        function getDeviceLoc(callback){
            if('geolocation' in navigator){
                navigator.geolocation.getCurrentPosition(function(location){
                    getCoordinates(location);
                    callback(location);
                })
            }else{
                alert('Geolocation not supported');
            }
        }

        function requestData(reqURL){

            /**Request the location data through stdlib API */
            var requestLocData = function(){
                this.get = function(URL, callback){
                    var request = new XMLHttpRequest();
                    request.onreadystatechange = function(){
                        if(request.readyState == 4 && request.status == 200){
                            //console.log(request.responseText);
                            callback(request.responseText);
                        }
                    }

                    request.open("GET", URL, true);
                    request.send(null);
                }
            }

            //request the data
            var locData = new requestLocData();
            locData.get(reqURL, function(res){
                var data = JSON.parse(res);
                console.log(data.result)
                console.log(data.result.formatted_address)
                

                location_txt.innerHTML = "Location: "+data.result.formatted_address;
                place_txt.innerHTML = "<b>Name: "+data.result.name + '</b>';
            });
        }


       