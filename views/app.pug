extends layout

block content

    //- #tiltLR
    //-     | nodata

    //- #tiltFB
    //-     | nodata

    //- #direction
    //-     | nodata

    //- #compassH
    //-     | nodata


    //-camera test
    .video-container
        video#video(width="100%" height="100%" autoplay)
        input(type="file" accept="image/*;capture=camera")

    canvas#canvas(width="800" height="480")


    script.
        /**initialize the background size**/
        window.onload = setup();
        
        function setup(){
            //setup the canvas 
            setupCanvas();

            //start streaming service
            startStream();
        };

        function setupCanvas(){
            var canvas = document.getElementById('canvas');
            var video = document.getElementById('video');
            divWidth = window.innerWidth;
            divHeight = window.innerHeight;

            console.log(divWidth, divHeight)

            canvas.style.width, video.style.width = divWidth;
            canvas.style.height, video.style.height = divHeight;

            console.log(canvas.style.width, canvas.style.height)
        }

        function startStream(){

        }

        function deviceOrientationListener(event){
            /**alpha z axis, beta x axis, gamma y axis*/
            var curralpha = Math.round(event.alpha);
            var currbeta  = Math.round(event.beta);
            var currgamma = Math.round(event.gamma);

            //- document.getElementById('tiltLR').innerHTML = curralpha;
            //- document.getElementById('tiltFB').innerHTML = currbeta;
            //- document.getElementById('direction').innerHTML = currgamma;
        }

        if(window.DeviceOrientationEvent){
            window.addEventListener("deviceorientation", deviceOrientationListener);
        }else{
            alert("error not supported");
        }


        /**Display Webcam */
        window.addEventListener("DOMContentLoaded", function() {
            var canvas = document.getElementById('canvas');
            var context = canvas.getContext('2d');
            var video = document.getElementById('video');
            var mediaConfig =  { video: true };
            var errBack = function(e) {
            	console.log('An error has occurred!', e)
            };

            // Put video listeners into place
            if(navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                navigator.mediaDevices.getUserMedia(mediaConfig).then(function(stream) {
                    video.src = window.URL.createObjectURL(stream);
                    video.play();
                });
            }

            //For old browsers
            else if(navigator.getUserMedia) {
                navigator.getUserMedia(mediaConfig, function(stream) {
                    video.src = stream;
                    video.play();
                }, errBack);
            } else if(navigator.webkitGetUserMedia) {
                navigator.webkitGetUserMedia(mediaConfig, function(stream){
                    video.src = window.webkitURL.createObjectURL(stream);
                    video.play();
                }, errBack);
            } else if(navigator.mozGetUserMedia) {
                navigator.mozGetUserMedia(mediaConfig, function(stream){
                    video.src = window.URL.createObjectURL(stream);
                    video.play();
                }, errBack);
            }
        }, false);
